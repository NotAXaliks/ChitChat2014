// <auto-generated />
using System;
using ChitChatApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ChitChatApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251023195822_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ChitChatApi.Models.ChatMembers", b =>
                {
                    b.Property<int>("Chatroom_Id")
                        .HasColumnType("integer");

                    b.Property<int>("Employee_Id")
                        .HasColumnType("integer");

                    b.HasKey("Chatroom_Id", "Employee_Id");

                    b.HasIndex("Employee_Id");

                    b.ToTable("ChatMembers");
                });

            modelBuilder.Entity("ChitChatApi.Models.ChatMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Chatroom_Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Sender_Id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Chatroom_Id");

                    b.HasIndex("Sender_Id");

                    b.ToTable("ChatMessages");
                });

            modelBuilder.Entity("ChitChatApi.Models.Chatroom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Chatrooms");
                });

            modelBuilder.Entity("ChitChatApi.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("ChitChatApi.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Department_Id")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Department_Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("ChitChatApi.Models.ChatMembers", b =>
                {
                    b.HasOne("ChitChatApi.Models.Chatroom", "Chatroom")
                        .WithMany("Members")
                        .HasForeignKey("Chatroom_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChitChatApi.Models.Employee", "Employee")
                        .WithMany("ChatMember")
                        .HasForeignKey("Employee_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chatroom");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("ChitChatApi.Models.ChatMessage", b =>
                {
                    b.HasOne("ChitChatApi.Models.Chatroom", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("Chatroom_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChitChatApi.Models.Employee", "Employee")
                        .WithMany("Messages")
                        .HasForeignKey("Sender_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("ChitChatApi.Models.Employee", b =>
                {
                    b.HasOne("ChitChatApi.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("Department_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("ChitChatApi.Models.Chatroom", b =>
                {
                    b.Navigation("Members");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("ChitChatApi.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("ChitChatApi.Models.Employee", b =>
                {
                    b.Navigation("ChatMember");

                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
